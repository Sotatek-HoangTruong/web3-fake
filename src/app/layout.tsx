import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ClientProvider from "@/providers/ClientProvider";
import SnackbarProvider from "@/providers/SnackBarProvider";

import { headers } from "next/headers";
import { cookieToInitialState } from "wagmi";
import getConfig from "next/config";
import Header from "@/components/common/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const initialState = cookieToInitialState(
    getConfig(),
    (await headers()).get('cookie')
  )

  

  return (
    <html lang="en">
      <ClientProvider inititalState={initialState}>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased bg-black text-white`}
        >
          <SnackbarProvider>
            <Header />
            {children}
          </SnackbarProvider>
        </body>
      </ClientProvider>
    </html>
  );
}
